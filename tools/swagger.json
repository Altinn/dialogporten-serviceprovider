{
  "openapi": "3.0.0",
  "info": {
    "title": "Dialogporten",
    "description": "Dialogporten API description for both enduser and serviceowner users, as well as open metadata information for public key material.<br><br>All operations* described within this document require authentication and authorization. Read more at <a href=\"https://docs.altinn.studio/dialogporten/user-guides/authenticating/\">https://docs.altinn.studio/dialogporten/user-guides/authenticating/</a><br><br><strong>All GET operations* and POST operations may return or contain, respectively, personal identifiable information (national identity numbers and names).</strong><br><br>For more information about this product, see <a href=\"https://docs.altinn.studio/dialogporten\">https://docs.altinn.studio/dialogporten</a><br><br><em>* Except the metadata APIs",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:7214/"
    }
  ],
  "paths": {
    "/api/v1/.well-known/oauth-authorization-server": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Gets the OAuth 2.0 Metadata for automatic configuration of clients verifying dialog tokens",
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \"OAuth 2.0 Authorization Server\" metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "V1WellKnownOauthAuthorizationServerGet_OauthAuthorizationServer",
        "responses": {
          "200": {
            "description": "The OAuth 2.0 Authorization Server Metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1WellKnownOauthAuthorizationServerQueriesGet_OauthAuthorizationServer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/.well-known/jwks.json": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Gets the JSON Web Key Set (JWKS) containing the public keys used to verify dialog token signatures",
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \"OAuth 2.0 Authorization Server\" metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "V1WellKnownJwksGet_Jwks",
        "responses": {
          "200": {
            "description": "The OAuth 2.0 Authorization Server Metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1WellKnownJwksQueriesGet_Jwks"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialog transmissions",
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "V1ServiceOwnerDialogTransmissionsSearch_DialogTransmission",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_Transmission"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Adds a transmission to a dialog",
        "description": "The transmission is created with the given configuration.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogTransmissionsCreate_DialogTransmission",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "CreateTransmissionRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsCreate_TransmissionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "The UUID of the created dialog transmission. A relative URL to the newly created activity is set in the \"Location\" header.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog transmission",
        "description": "Gets a single transmission belonging to a dialog.",
        "operationId": "V1ServiceOwnerDialogTransmissionsGet_DialogTransmission",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "transmissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_Transmission"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The specified dialog ID or transmission ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets all seen log records for a dialog",
        "description": "Gets all seen log records for a dialog.",
        "operationId": "V1ServiceOwnerDialogSeenLogsSearch_DialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog seen log records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesSearch_SeenLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record.",
        "operationId": "V1ServiceOwnerDialogSeenLogsGet_DialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "seenLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesGet_SeenLog"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}": {
      "put": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Replaces a dialog",
        "description": "Replaces a given dialog with the supplied model.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsUpdate_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Dialog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The dialog aggregate was updated successfully.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            }
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to update the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog",
        "description": "Gets a single dialog aggregate.\n\nNote that this operation may return deleted dialogs (see the field `DeletedAt`).",
        "operationId": "V1ServiceOwnerDialogsGet_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "endUserId",
            "in": "query",
            "description": "Filter by end user id",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog aggregate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_Dialog"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Deletes a dialog",
        "description": "Deletes a given dialog (soft delete).\n\nNote that the dialog will still be available on the single details endpoint, but will have a deleted status. It will not appear on the list endpoint for either service owners nor end users.\nIf end users attempt to access the dialog via the details endpoint, they will get a 410 Gone response.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsDelete_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            }
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Patch a single dialog",
        "description": "Patches a dialog aggregate with a RFC6902 JSON Patch document. The patch document must be a JSON array of RFC6902 operations.\nSee [https://tools.ietf.org/html/rfc6902](https://tools.ietf.org/html/rfc6902) for more information.\n            \nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsPatchDialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "If-Match",
            "x-originalName": "etag",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "patchDocument",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonPatchOperations_Operation"
                }
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "Patch was successfully applied.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            }
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \\\"digdir:dialogporten.serviceprovider\\\""
          },
          "403": {
            "description": "Unauthorized to update a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)"
          },
          "404": {
            "description": "The given dialog ID was not found or is deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "The dialog with the given key is removed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied Revision does not match the current Revision of the dialog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occurred. See problem details for a list of errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialogs",
        "description": "Performs a search for dialogs, returning a paginated list of dialogs.\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00+01:00\n* See \"continuationToken\" in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "V1ServiceOwnerDialogsSearch_Dialog",
        "parameters": [
          {
            "name": "serviceResource",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service resources",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "party",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more owning parties",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "endUserId",
            "in": "query",
            "description": "Filter by end user id",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "extendedStatus",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more extended statuses",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "Filter by external reference",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by status",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "If set to 'include', the result will include both deleted and non-deleted dialogs. If set to 'exclude', the result will only include non-deleted dialogs. If set to 'only', the result will only include deleted dialogs",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/V1Common_DeletedFilter"
                }
              ]
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return dialogs created after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return dialogs created before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return dialogs updated after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return dialogs updated before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Only return dialogs with due date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Only return dialogs with due date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "visibleAfter",
            "in": "query",
            "description": "Only return dialogs with visible-from date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "visibleBefore",
            "in": "query",
            "description": "Only return dialogs with visible-from date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "process",
            "in": "query",
            "description": "Filter by process",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "systemLabel",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by Display state",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "searchLanguageCode",
            "in": "query",
            "description": "Limit free text search to texts with this language code, e.g. 'nb', 'en'. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Supply \"continuationToken\" for the response to get the next page of results, if hasNextPage is true",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfV1ServiceOwnerDialogsQueriesSearch_Dialog"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider.search\"."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider",
              "digdir:dialogporten.serviceprovider.search"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Creates a new dialog",
        "description": "The dialog is created with the given configuration.\n\nFor detailed information on validation rules, see [the source for CreateDialogCommandValidator](https://github.com/altinn/dialogporten/blob/main/src/Digdir.Domain.Dialogporten.Application/Features/V1/ServiceOwner/Dialogs/Commands/Create/CreateDialogCommandValidator.cs)",
        "operationId": "V1ServiceOwnerDialogsCreate_Dialog",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Dialog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The UUID of the created dialog aggregate. A relative URL to the newly created activity is set in the \"Location\" header.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "409": {
            "description": "Dialog with IdempotentKey 01941821-ffca-73a1-9335-435a882be014 has already been created."
          },
          "422": {
            "description": "Domain error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/restore": {
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Restore a dialog",
        "description": "Restore a dialog. ",
        "operationId": "V1ServiceOwnerDialogsRestore_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was restored successfully."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/purge": {
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Permanently deletes a dialog",
        "description": "Deletes a given dialog (hard delete).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsPurge_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialog activities",
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "V1ServiceOwnerDialogActivitiesSearch_DialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesSearch_Activity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Adds a activity to a dialogs activity history",
        "description": "The activity is created with the given configuration.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogActivitiesCreate_DialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "CreateActivityRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesCreate_ActivityRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "The UUID of the created dialog activity. A relative URL to the newly created activity is set in the \"Location\" header.",
            "headers": {
              "Etag": {
                "description": "The new UUID ETag of the dialog",
                "schema": {
                  "type": "string"
                },
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Validation error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occurred. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/should-send-notification": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Returns a boolean value based on conditions used to determine if a notification is to be sent",
        "description": "Used by Altinn Notification only. Takes a dialogId and returns a boolean value based on conditions used to determine if a notification is to be sent.",
        "operationId": "V1ServiceOwnerDialogActivitiesNotificationCondition_NotificationCondition",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "conditionType",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionType"
                }
              ]
            }
          },
          {
            "name": "activityType",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
                }
              ]
            }
          },
          {
            "name": "transmissionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the notification determination.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationCondition"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"altinn:system/notifications.condition.check\"."
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog activity",
        "description": "Gets a single activity belonging to a dialog.",
        "operationId": "V1ServiceOwnerDialogActivitiesGet_DialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesGet_Activity"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The specified dialog ID or activity ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten.serviceprovider"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/parties": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets the list of authorized parties for the end user",
        "description": "Gets the list of authorized parties for the end user.",
        "operationId": "V1EndUserPartiesGet_Parties",
        "responses": {
          "200": {
            "description": "The list of authorized parties for the end user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_Parties"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialog transmissions",
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "V1EndUserDialogTransmissionsSearch_DialogTransmission",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_Transmission"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog transmission",
        "description": "Gets a single transmission belonging to a dialog.",
        "operationId": "V1EndUserDialogTransmissionsGet_DialogTransmission",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "transmissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_Transmission"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The specified dialog ID or transmission ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": "Entity with the given key(s) is removed."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/systemlabels": {
      "put": {
        "tags": [
          "Enduser"
        ],
        "operationId": "V1EndUserDialogSystemLabelsSet_SetDialogSystemLabel",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "x-name": "SystemLabelCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1EndUserDialogSystemLabelsCommandsSet_SystemLabelCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": ""
          },
          "412": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets all seen log records for a dialog",
        "description": "Gets all seen log records for a dialog.",
        "operationId": "V1EndUserDialogSeenLogsSearch_DialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog seen log records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesSearch_SeenLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record.",
        "operationId": "V1EndUserDialogSeenLogsGet_DialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "seenLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesGet_SeenLog"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialogs",
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. \n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00+01:00\n* See \"continuationToken\" in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "V1EndUserDialogsSearch_Dialog",
        "parameters": [
          {
            "name": "org",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service owner codes",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "serviceResource",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service resources",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "party",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more owning parties",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "extendedStatus",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more extended statuses",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "Filter by external reference",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by status",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return dialogs created after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return dialogs created before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return dialogs updated after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return dialogs updated before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Only return dialogs with due date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Only return dialogs with due date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "process",
            "in": "query",
            "description": "Filter by process",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "systemLabel",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by Display state",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "searchLanguageCode",
            "in": "query",
            "description": "Limit free text search to texts with this language code, e.g. 'nb', 'en'. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Supply \"continuationToken\" for the response to get the next page of results, if hasNextPage is true",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfV1EndUserDialogsQueriesSearch_Dialog"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog",
        "description": "Gets a single dialog aggregate. ",
        "operationId": "V1EndUserDialogsGet_Dialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog aggregate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_Dialog"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/labellog": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "operationId": "V1EndUserDialogLabelAssignmentLogsSearch_DialogLabelAssignmentLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogLabelAssignmentLogQueriesSearch_LabelAssignmentLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "410": {
            "description": ""
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialog activities",
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "V1EndUserDialogActivitiesSearch_DialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogActivitiesQueriesSearch_Activity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "description": "The given dialog ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog activity",
        "description": "Gets a single activity belonging to a dialog.",
        "operationId": "V1EndUserDialogActivitiesGet_DialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogActivitiesQueriesGet_Activity"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "description": "The specified dialog ID or activity ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "digdir:dialogporten"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "V1WellKnownOauthAuthorizationServerQueriesGet_OauthAuthorizationServer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "issuer": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          }
        }
      },
      "V1WellKnownJwksQueriesGet_Jwks": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "keys": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1WellKnownJwksQueriesGet_Jwk"
            }
          }
        }
      },
      "V1WellKnownJwksQueriesGet_Jwk": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "crv": {
            "type": "string"
          },
          "x": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_Content"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the transmission.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_Attachment"
            }
          }
        }
      },
      "DialogsEntitiesTransmissions_DialogTransmissionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ],
        "enum": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ]
      },
      "V1ServiceOwnerCommonActors_Actor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorType": {
            "description": "The type of actor; either the service owner, or someone representing the party.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Actors_ActorType"
              }
            ]
          },
          "actorName": {
            "type": "string",
            "description": "The name of the actor.",
            "nullable": true,
            "example": "Ola Nordmann"
          },
          "actorId": {
            "type": "string",
            "description": "The identifier (national identity number or organization number) of the actor.",
            "nullable": true,
            "example": "urn:altinn:person:identifier-no:12018212345"
          }
        }
      },
      "Actors_ActorType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PartyRepresentative",
          "ServiceOwner"
        ],
        "enum": [
          "PartyRepresentative",
          "ServiceOwner"
        ]
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1CommonContent_ContentValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "array",
            "description": "A list of localizations for the content.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "mediaType": {
            "type": "string",
            "description": "Media type of the content, this can also indicate that the content is embeddable."
          }
        }
      },
      "V1CommonLocalizations_Localization": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "description": "The localized text (or URL if a front-channel embed)."
          },
          "languageCode": {
            "type": "string",
            "description": "The language code of the localization in ISO 639-1 format.",
            "example": "nb"
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_AttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "Attachments_AttachmentUrlConsumerType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Gui",
          "Api"
        ],
        "enum": [
          "Gui",
          "Api"
        ]
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_Content"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the transmission.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_Attachment"
            }
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_AttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogTransmissionsCreate_TransmissionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of transmissions.\nIf not supplied, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The transmission unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_TransmissionContent"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The transmission-level attachments.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_TransmissionAttachment"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_TransmissionContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The transmission title. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_TransmissionAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent additions of transmission attachments. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_TransmissionAttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_TransmissionAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogSeenLogsQueriesSearch_SeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "format": "date-time"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogSeenLogsQueriesGet_SeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "format": "date-time"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogsUpdate_DialogRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dto": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Dialog"
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "description": "The timestamp when the dialog should be made visible for authorized end users. If not provided, the dialog will be\nimmediately available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed after creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "content": {
            "description": "The dialog unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Content"
              }
            ]
          },
          "searchTags": {
            "type": "array",
            "description": "A list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Tag"
            }
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the dialog (on an aggregate level).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Attachment"
            }
          },
          "transmissions": {
            "type": "array",
            "description": "The immutable list of transmissions associated with the dialog. When updating via PUT, any transmissions\nadded here will be appended to the existing list of transmissions.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Transmission"
            }
          },
          "guiActions": {
            "type": "array",
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_GuiAction"
            }
          },
          "apiActions": {
            "type": "array",
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_ApiAction"
            }
          },
          "activities": {
            "type": "array",
            "description": "An immutable list of activities associated with the dialog. When updating via PUT, any activities added here\nwill be appended to the existing list of activities.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_Activity"
            }
          }
        }
      },
      "DialogsEntities_DialogStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "New",
          "InProgress",
          "Draft",
          "Sent",
          "RequiresAttention",
          "Completed"
        ],
        "enum": [
          "New",
          "InProgress",
          "Draft",
          "Sent",
          "RequiresAttention",
          "Completed"
        ]
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveTitle": {
            "description": "An optional non-sensitive title of the dialog.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveSummary": {
            "description": "An optional non-sensitive summary of the dialog and its current state.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name. Must be text/plain if supplied.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field. Must be text/plain.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Tag": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "description": "A search tag value."
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent additions of attachments. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_AttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of transmissions.\nIf not supplied, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The transmission unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_TransmissionContent"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The transmission-level attachments.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_TransmissionAttachment"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_GuiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent additions of Gui Actions. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "action": {
            "type": "string",
            "description": "The action identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy."
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\"urn:dialogporten:unauthorized\" if the user is not authorized to perform the action.",
            "format": "uri",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isDeleteDialogAction": {
            "type": "boolean",
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions."
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActions_DialogGuiActionPriority"
              }
            ]
          },
          "title": {
            "type": "array",
            "description": "The title of the action, this should be short and in verb form. Must be text/plain.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "prompt": {
            "type": "array",
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "Http_HttpVerb": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ],
        "enum": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ]
      },
      "DialogsEntitiesActions_DialogGuiActionPriority": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Primary",
          "Secondary",
          "Tertiary"
        ],
        "enum": [
          "Primary",
          "Secondary",
          "Tertiary"
        ]
      },
      "V1ServiceOwnerDialogsCommandsUpdate_ApiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent additions of Api Actions. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "action": {
            "type": "string",
            "description": "String identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.",
            "example": "write"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "name": {
            "type": "string",
            "description": "The logical name of the operation the API action refers to.",
            "nullable": true,
            "example": "confirm"
          },
          "endpoints": {
            "type": "array",
            "description": "The endpoints associated with the action.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_ApiActionEndpoint"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_ApiActionEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "version": {
            "type": "string",
            "description": "Arbitrary string indicating the version of the endpoint.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to documentation for the endpoint, providing documentation for integrators. Should be a URL to a\nhuman-readable page.",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "description": "Link to the request schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "description": "Link to the response schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Boolean indicating if the endpoint is deprecated."
          },
          "sunsetAt": {
            "type": "string",
            "description": "Date and time when the endpoint will no longer function. Only set if the endpoint is deprecated. Dialogporten\nwill not enforce this date.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsUpdate_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of activities.\nIf not supplied, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "DialogsEntitiesActivities_DialogActivityType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided",
          "DialogOpened",
          "DialogDeleted",
          "DialogRestored",
          "SentToSigning",
          "SentToFormFill",
          "SentToSendIn",
          "SentToPayment",
          "FormSubmitted",
          "FormSaved"
        ],
        "enum": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided",
          "DialogOpened",
          "DialogDeleted",
          "DialogRestored",
          "SentToSigning",
          "SentToFormFill",
          "SentToSendIn",
          "SentToPayment",
          "FormSubmitted",
          "FormSaved"
        ]
      },
      "PaginatedListOfV1ServiceOwnerDialogsQueriesSearch_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "description": "The paginated list of items",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_Dialog"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there are more items available that can be fetched by supplying the continuation token"
          },
          "continuationToken": {
            "type": "string",
            "description": "The continuation token to be used to fetch the next page of items",
            "nullable": true,
            "example": "createdat_2024-07-31T09:09:03.0257090Z,id_0c089101-b7cf-a476-955c-f00a78d74a4e"
          },
          "orderBy": {
            "type": "string",
            "description": "The current sorting order of the items",
            "example": "createdat_desc,id_desc"
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesSearch_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "format": "guid",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "org": {
            "type": "string",
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske"
          },
          "revision": {
            "type": "string",
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "format": "guid",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca"
          },
          "serviceResource": {
            "type": "string",
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier"
          },
          "serviceResourceType": {
            "type": "string",
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)."
          },
          "party": {
            "type": "string",
            "description": "The party code representing the organization or person that the dialog belongs to in URN format.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678"
          },
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "guiAttachmentCount": {
            "type": "integer",
            "description": "The number of attachments in the dialog made available for browser-based frontends.",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the dialog was created.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the dialog was last updated.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. This is the last date when the dialog is expected to be completed.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "If deleted, the date and time when the deletion was performed.",
            "format": "date-time",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "description": "The timestamp when the dialog will be made visible for authorized end users.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            ]
          },
          "latestActivity": {
            "description": "The latest entry in the dialog's activity log.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_DialogActivity"
              }
            ]
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_DialogSeenLog"
            }
          },
          "content": {
            "description": "The content of the dialog in search results.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_Content"
              }
            ]
          }
        }
      },
      "DialogEndUserContextsEntities_SystemLabel": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Default",
          "Bin",
          "Archive"
        ],
        "enum": [
          "Default",
          "Bin",
          "Archive"
        ]
      },
      "V1ServiceOwnerDialogsQueriesSearch_DialogActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "An arbitrary string with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesSearch_DialogSeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "description": "The timestamp when the dialog revision was seen.",
            "format": "date-time"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created by the end user supplied in the query."
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesSearch_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveTitle": {
            "description": "An optional non-sensitive title of the dialog.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveSummary": {
            "description": "An optional non-sensitive summary of the dialog and its current state.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "format": "guid",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "idempotentKey": {
            "type": "string",
            "description": "An optional key to ensure idempotency in dialog creation. If provided, it allows for the safe re-submission of the same dialog creation request without creating duplicate entries.\n            ",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "format": "guid",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca"
          },
          "org": {
            "type": "string",
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske"
          },
          "serviceResource": {
            "type": "string",
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier"
          },
          "serviceResourceType": {
            "type": "string",
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)."
          },
          "party": {
            "type": "string",
            "description": "The party code representing the organization or person that the dialog belongs to in URN format.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678"
          },
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "description": "If deleted, the date and time when the deletion was performed.",
            "format": "date-time",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "description": "The timestamp when the dialog will be made visible for authorized end users.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "expiresAt": {
            "type": "string",
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed by the service\nowner after the dialog has been created.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the dialog was created.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the dialog was last updated.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            ]
          },
          "content": {
            "description": "The dialog unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_Content"
              }
            ]
          },
          "searchTags": {
            "type": "array",
            "description": "The list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_Tag"
            }
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the dialog (on an aggregate level).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogAttachment"
            }
          },
          "transmissions": {
            "type": "array",
            "description": "The immutable list of transmissions associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogTransmission"
            }
          },
          "guiActions": {
            "type": "array",
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogGuiAction"
            }
          },
          "apiActions": {
            "type": "array",
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogApiAction"
            }
          },
          "activities": {
            "type": "array",
            "description": "An immutable list of activities associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogActivity"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogSeenLog"
            }
          }
        }
      },
      "OrderSetOfTOrderDefinitionAndTTarget": {},
      "ContinuationTokenSetOfTOrderDefinitionAndTTarget": {},
      "V1Common_DeletedFilter": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Exclude",
          "Include",
          "Only"
        ],
        "enum": [
          "Exclude",
          "Include",
          "Only"
        ]
      },
      "V1ServiceOwnerDialogsQueriesGet_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveTitle": {
            "description": "An optional non-sensitive title of the dialog.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveSummary": {
            "description": "An optional non-sensitive summary of the dialog and its current state.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_Tag": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "description": "A search tag value."
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogAttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "What type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogTransmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Flag indicating if the authenticated user supplied in the query is authorized for this transmission.",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The transmission unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogTransmissionContent"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The transmission-level attachments.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogTransmissionAttachment"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogTransmissionContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The transmission title.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogTransmissionAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogTransmissionAttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogTransmissionAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogGuiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid"
          },
          "action": {
            "type": "string",
            "description": "The action identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy."
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered.",
            "format": "uri"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Whether the user, if supplied in the query, is authorized to perform the action.",
            "nullable": true
          },
          "isDeleteDialogAction": {
            "type": "boolean",
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions."
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActions_DialogGuiActionPriority"
              }
            ]
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "title": {
            "type": "array",
            "description": "The title of the action, this should be short and in verb form.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "prompt": {
            "type": "array",
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogApiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid"
          },
          "action": {
            "type": "string",
            "description": "String identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.",
            "example": "write"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "True if the authenticated user (set in the query) is authorized for this action.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The logical name of the operation the API action refers to.",
            "nullable": true,
            "example": "confirm"
          },
          "endpoints": {
            "type": "array",
            "description": "The endpoints associated with the action.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_DialogApiActionEndpoint"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogApiActionEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the endpoint in UUIDv7 format.",
            "format": "guid"
          },
          "version": {
            "type": "string",
            "description": "Arbitrary string indicating the version of the endpoint.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to service provider documentation for the endpoint. Used for service owners to provide documentation for\nintegrators. Should be a URL to a human-readable page.",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "description": "Link to the request schema for the endpoint. Used by service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "description": "Link to the response schema for the endpoint. Used for service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Boolean indicating if the endpoint is deprecated. Integrators should migrate to endpoints with a higher version."
          },
          "sunsetAt": {
            "type": "string",
            "description": "Date and time when the service owner has indicated that endpoint will no longer function. Only set if the endpoint\nis deprecated. Dialogporten will not enforce this date.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "An arbitrary URI/URN with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsQueriesGet_DialogSeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "description": "The timestamp when the dialog revision was seen.",
            "format": "date-time"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created by the current end user, if provided in the query."
          }
        }
      },
      "V1ServiceOwnerDialogsCreate_DialogRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dto": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Dialog"
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of dialogs. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "idempotentKey": {
            "type": "string",
            "description": "An optional key to ensure idempotency in dialog creation. If provided, it allows for the safe re-submission of the same dialog creation request without creating duplicate entries.",
            "nullable": true
          },
          "serviceResource": {
            "type": "string",
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a resource in the Altinn Resource Registry, which the authenticated organization\nmust own, i.e., be listed as the \"competent authority\" in the Resource Registry entry.",
            "example": "urn:altinn:resource:some-service-identifier"
          },
          "party": {
            "type": "string",
            "description": "The party code representing the organization or person that the dialog belongs to in URN format.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678"
          },
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "description": "The timestamp when the dialog should be made visible for authorized end users. If not provided, the dialog will be\nimmediately available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed after creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "createdAt": {
            "type": "string",
            "description": "If set, will override the date and time when the dialog is set as created.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "If set, will override the date and time when the dialog is set as last updated.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "systemLabel": {
            "description": "Set the system label of the dialog Migration purposes.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            ]
          },
          "content": {
            "description": "The dialog unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Content"
              }
            ]
          },
          "searchTags": {
            "type": "array",
            "description": "A list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Tag"
            }
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the dialog (on an aggregate level).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Attachment"
            }
          },
          "transmissions": {
            "type": "array",
            "description": "The immutable list of transmissions associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Transmission"
            }
          },
          "guiActions": {
            "type": "array",
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_GuiAction"
            }
          },
          "apiActions": {
            "type": "array",
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_ApiAction"
            }
          },
          "activities": {
            "type": "array",
            "description": "An immutable list of activities associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_Activity"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog.\nSupported media types: text/plain",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveTitle": {
            "description": "An optional non-sensitive title of the dialog.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.\nSupported media types: text/plain",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "nonSensitiveSummary": {
            "description": "An optional non-sensitive summary of the dialog and its current state.\nUsed for search and list views if the user authorization does not meet the required eIDAS level",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name. Must be text/plain if supplied.\nSupported media types: text/plain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "additionalInfo": {
            "description": "Additional information about the dialog.\nSupported media types: text/plain, text/markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field.\nSupported media types: text/plain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Tag": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "description": "A search tag value."
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of attachments. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_AttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of transmissions. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The transmission unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_TransmissionContent"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The transmission-level attachments.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_TransmissionAttachment"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_TransmissionContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The transmission title. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_TransmissionAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of transmission attachments. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_TransmissionAttachmentUrl"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_TransmissionAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_GuiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of Gui Actions. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "action": {
            "type": "string",
            "description": "The action identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy."
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\"urn:dialogporten:unauthorized\" if the user is not authorized to perform the action.",
            "format": "uri",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isDeleteDialogAction": {
            "type": "boolean",
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions."
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActions_DialogGuiActionPriority"
              }
            ]
          },
          "title": {
            "type": "array",
            "description": "The title of the action, this should be short and in verb form. Must be text/plain.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "prompt": {
            "type": "array",
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_ApiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of Api Actions. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "action": {
            "type": "string",
            "description": "String identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.",
            "example": "write"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "name": {
            "type": "string",
            "description": "The logical name of the operation the API action refers to.",
            "nullable": true,
            "example": "confirm"
          },
          "endpoints": {
            "type": "array",
            "description": "The endpoints associated with the action.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_ApiActionEndpoint"
            }
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_ApiActionEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string",
            "description": "Arbitrary string indicating the version of the endpoint.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to documentation for the endpoint, providing documentation for integrators. Should be a URL to a\nhuman-readable page.",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "description": "Link to the request schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "description": "Link to the response schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Boolean indicating if the endpoint is deprecated."
          },
          "sunsetAt": {
            "type": "string",
            "description": "Date and time when the endpoint will no longer function. Only set if the endpoint is deprecated. Dialogporten\nwill not enforce this date.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogsCommandsCreate_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of activities. If not provided, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogActivitiesQueriesSearch_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transmissionId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationCondition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sendNotification": {
            "type": "boolean"
          }
        }
      },
      "V1ServiceOwnerDialogActivitiesQueriesGet_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transmissionId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
          },
          "description": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotExists",
          "Exists"
        ],
        "enum": [
          "NotExists",
          "Exists"
        ]
      },
      "V1ServiceOwnerDialogActivitiesCreate_ActivityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of activities.\nIf not supplied, a new UUIDv7 will be generated.",
            "format": "guid",
            "nullable": true,
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "createdAt": {
            "type": "string",
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1EndUserPartiesQueriesGet_Parties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authorizedParties": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_AuthorizedParty"
            }
          }
        }
      },
      "V1EndUserPartiesQueriesGet_AuthorizedParty": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "party": {
            "type": "string",
            "description": "The party identifier in URN format",
            "example": "urn:altinn:organization:identifier-no:912345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the party (verbatim from CCR, usually in all caps)",
            "example": "CONTOSO REAL ESTATE AS"
          },
          "partyType": {
            "type": "string",
            "description": "The type of the party, either \"Organization\" or \"Person\".",
            "example": "Organization"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the party is deleted or not"
          },
          "hasKeyRole": {
            "type": "boolean",
            "description": "Whether the authenticated user has a key role in the party.\n            \nRead more about key roles (norwegian) at https://docs.altinn.studio/nb/altinn-studio/reference/configuration/authorization/guidelines_authorization/roles_and_rights/roles_er/#nøkkelroller"
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "description": "Whether this party represents the authenticated user."
          },
          "isMainAdministrator": {
            "type": "boolean",
            "description": "Whether the authenticated user is the main administrator of the party\n            \nRead more about main administrator (norwegian) at https://docs.altinn.studio/nb/altinn-studio/reference/configuration/authorization/guidelines_authorization/roles_and_rights/roles_altinn/altinn_roles_administration/#hovedadministrator"
          },
          "isAccessManager": {
            "type": "boolean",
            "description": "Whether the authenticated user is an access manager of the party.\n            \nRead more about access managers (norwegian) at https://docs.altinn.studio/nb/altinn-studio/reference/configuration/authorization/guidelines_authorization/roles_and_rights/roles_altinn/altinn_roles_administration/#tilgangsstrying"
          },
          "hasOnlyAccessToSubParties": {
            "type": "boolean",
            "description": "If the authenticated user has only access to sub parties of this party, and not this party itself."
          },
          "subParties": {
            "type": "array",
            "description": "The sub parties of this party, if any. The sub party uses the same data model.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_AuthorizedParty"
            }
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesSearch_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available."
          },
          "extendedType": {
            "type": "string",
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_Content"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the transmission.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_Attachment"
            }
          }
        }
      },
      "V1EndUserCommonActors_Actor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorType": {
            "description": "The type of actor; either the service owner, or someone representing the party.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Actors_ActorType"
              }
            ]
          },
          "actorName": {
            "type": "string",
            "description": "The name of the actor.",
            "nullable": true,
            "example": "Ola Nordmann"
          },
          "actorId": {
            "type": "string",
            "description": "The identifier (national identity number or organization number) of the actor.",
            "nullable": true,
            "example": "urn:altinn:person:identifier-no:12018212345"
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesSearch_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesSearch_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_AttachmentUrl"
            }
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesSearch_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesGet_Transmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available."
          },
          "extendedType": {
            "type": "string",
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_Content"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the transmission.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_Attachment"
            }
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesGet_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesGet_Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_AttachmentUrl"
            }
          }
        }
      },
      "V1EndUserDialogTransmissionsQueriesGet_AttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1EndUserDialogSystemLabelsCommandsSet_SystemLabelCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "label": {
            "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
          },
          "ifMatchDialogRevision": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "V1EndUserDialogSeenLogsQueriesSearch_SeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "format": "date-time"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "V1EndUserDialogSeenLogsQueriesGet_SeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "format": "date-time"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "PaginatedListOfV1EndUserDialogsQueriesSearch_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "description": "The paginated list of items",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_Dialog"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there are more items available that can be fetched by supplying the continuation token"
          },
          "continuationToken": {
            "type": "string",
            "description": "The continuation token to be used to fetch the next page of items",
            "nullable": true,
            "example": "createdat_2024-07-31T09:09:03.0257090Z,id_0c089101-b7cf-a476-955c-f00a78d74a4e"
          },
          "orderBy": {
            "type": "string",
            "description": "The current sorting order of the items",
            "example": "createdat_desc,id_desc"
          }
        }
      },
      "V1EndUserDialogsQueriesSearch_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "format": "guid",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "org": {
            "type": "string",
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske"
          },
          "serviceResource": {
            "type": "string",
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier"
          },
          "serviceResourceType": {
            "type": "string",
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)."
          },
          "party": {
            "type": "string",
            "description": "The party code representing the organization or person that the dialog belongs to in URN format.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678"
          },
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "guiAttachmentCount": {
            "type": "integer",
            "description": "The number of attachments in the dialog made available for browser-based frontends.",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the dialog was created.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the dialog was last updated.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. This is the last date when the dialog is expected to be completed.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            ]
          },
          "latestActivity": {
            "description": "The latest entry in the dialog's activity log.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_DialogActivity"
              }
            ]
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_DialogSeenLog"
            }
          },
          "content": {
            "description": "The content of the dialog in search results.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_Content"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesSearch_DialogActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "An arbitrary string with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesSearch_DialogSeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "description": "The timestamp when the dialog revision was seen.",
            "format": "date-time"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created by the current end user."
          }
        }
      },
      "V1EndUserDialogsQueriesSearch_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesGet_Dialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "format": "guid",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d"
          },
          "revision": {
            "type": "string",
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "format": "guid",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca"
          },
          "org": {
            "type": "string",
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske"
          },
          "serviceResource": {
            "type": "string",
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier"
          },
          "serviceResourceType": {
            "type": "string",
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)."
          },
          "party": {
            "type": "string",
            "description": "The party code representing the organization or person that the dialog belongs to in URN format.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678"
          },
          "progress": {
            "type": "integer",
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "type": "string",
            "description": "Optional process identifier used to indicate a business process this dialog belongs to.",
            "nullable": true
          },
          "precedingProcess": {
            "type": "string",
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \"Process\" field. Cannot be set without also \"Process\" being set.",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \"status\" enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "expiresAt": {
            "type": "string",
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed by the service\nowner after the dialog has been created.",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-31T23:59:59Z"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the dialog was created.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the dialog was last updated.",
            "format": "date-time",
            "example": "2022-12-31T23:59:59Z"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntities_DialogStatus"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogEndUserContextsEntities_SystemLabel"
              }
            ]
          },
          "content": {
            "description": "The dialog unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_Content"
              }
            ]
          },
          "dialogToken": {
            "type": "string",
            "description": "The dialog token. May be used (if supported) against external URLs referred to in this dialog's apiActions,\ntransmissions or attachments. It should also be used for front-channel embeds.",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "description": "The attachments associated with the dialog (on an aggregate level).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogAttachment"
            }
          },
          "transmissions": {
            "type": "array",
            "description": "The immutable list of transmissions associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogTransmission"
            }
          },
          "guiActions": {
            "type": "array",
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogGuiAction"
            }
          },
          "apiActions": {
            "type": "array",
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogApiAction"
            }
          },
          "activities": {
            "type": "array",
            "description": "An immutable list of activities associated with the dialog.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogActivity"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogSeenLog"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_Content": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \"org\" as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \"ExtendedStatus\" field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogAttachmentUrl"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "What type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogTransmission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the transmission was created.",
            "format": "date-time"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available."
          },
          "extendedType": {
            "type": "string",
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "relatedTransmissionId": {
            "type": "string",
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesTransmissions_DialogTransmissionType"
              }
            ]
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "content": {
            "description": "The transmission unstructured text content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogTransmissionContent"
              }
            ]
          },
          "attachments": {
            "type": "array",
            "description": "The transmission-level attachments.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogTransmissionAttachment"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogTransmissionContent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "description": "The transmission title.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          },
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValue"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogTransmissionAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid"
          },
          "displayName": {
            "type": "array",
            "description": "The display name of the attachment that should be used in GUIs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "urls": {
            "type": "array",
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogTransmissionAttachmentUrl"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogTransmissionAttachmentUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the attachment. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to access the transmission.",
            "format": "uri",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized"
          },
          "mediaType": {
            "type": "string",
            "description": "The media type of the attachment.",
            "nullable": true,
            "example": "application/pdf\napplication/zip"
          },
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Attachments_AttachmentUrlConsumerType"
              }
            ]
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogGuiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid"
          },
          "action": {
            "type": "string",
            "description": "The action identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy."
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\"urn:dialogporten:unauthorized\" if the user is not authorized to perform the action.",
            "format": "uri",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "Whether the user is authorized to perform the action."
          },
          "isDeleteDialogAction": {
            "type": "boolean",
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions."
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActions_DialogGuiActionPriority"
              }
            ]
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "title": {
            "type": "array",
            "description": "The title of the action, this should be short and in verb form.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          },
          "prompt": {
            "type": "array",
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogApiAction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid"
          },
          "action": {
            "type": "string",
            "description": "String identifier for the action, corresponding to the \"action\" attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.",
            "example": "write"
          },
          "authorizationAttribute": {
            "type": "string",
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \"serviceResource\" in the dialog.\n            \nCan also be used to refer to other service policies.",
            "nullable": true,
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier"
          },
          "isAuthorized": {
            "type": "boolean",
            "description": "True if the authenticated user is authorized for this action. If not, the action will not be available\nand all endpoints will be replaced with a fixed placeholder."
          },
          "name": {
            "type": "string",
            "description": "The logical name of the operation the API action refers to.",
            "nullable": true,
            "example": "confirm"
          },
          "endpoints": {
            "type": "array",
            "description": "The endpoints associated with the action.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_DialogApiActionEndpoint"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogApiActionEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the endpoint in UUIDv7 format.",
            "format": "guid"
          },
          "version": {
            "type": "string",
            "description": "Arbitrary string indicating the version of the endpoint.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The fully qualified URL of the API endpoint. Will be set to \"urn:dialogporten:unauthorized\" if the user is\nnot authorized to perform the action.",
            "format": "uri",
            "example": "https://someendpoint.com/api/v1/someaction\nurn:dialogporten:unauthorized"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Http_HttpVerb"
              }
            ]
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to service provider documentation for the endpoint. Used for service owners to provide documentation for\nintegrators. Should be a URL to a human-readable page.",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "description": "Link to the request schema for the endpoint. Used by service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "description": "Link to the response schema for the endpoint. Used for service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Boolean indicating if the endpoint is deprecated. Integrators should migrate to endpoints with a higher version."
          },
          "sunsetAt": {
            "type": "string",
            "description": "Date and time when the service owner has indicated that endpoint will no longer function. Only set if the endpoint\nis deprecated. Dialogporten will not enforce this date.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "description": "An arbitrary URI/URN with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
              }
            ]
          },
          "transmissionId": {
            "type": "string",
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "description": {
            "type": "array",
            "description": "Unstructured text describing the activity. Only set if the activity type is \"Information\".",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "V1EndUserDialogsQueriesGet_DialogSeenLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid"
          },
          "seenAt": {
            "type": "string",
            "description": "The timestamp when the dialog revision was seen.",
            "format": "date-time"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
              }
            ]
          },
          "isViaServiceOwner": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "description": "Flag indicating whether the seen log entry was created by the current end user."
          }
        }
      },
      "V1EndUserDialogLabelAssignmentLogQueriesSearch_LabelAssignmentLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
          }
        }
      },
      "V1EndUserDialogActivitiesQueriesSearch_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "seenByEndUserIdHash": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
          },
          "transmissionId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "V1EndUserDialogActivitiesQueriesGet_Activity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogsEntitiesActivities_DialogActivityType"
          },
          "transmissionId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1EndUserCommonActors_Actor"
          },
          "description": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_Localization"
            }
          }
        }
      },
      "JsonPatchOperations_Operation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/JsonPatchOperations_OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        }
      },
      "JsonPatchOperations_OperationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ]
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}