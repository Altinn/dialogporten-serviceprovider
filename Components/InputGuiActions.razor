@using System.Diagnostics.CodeAnalysis
@using Altinn.ApiClients.Dialogporten.Features.V1
@inherits InputBase<ICollection<V1ServiceOwnerDialogsCommandsCreate_GuiAction>>

<fieldset>
    <table>
        <tbody>
        @foreach (var guiAction in Value!)
        {
            <tr>
                <td>
                    <InputGuid @bind-Value="@guiAction.Id"/>
                    <ValidationMessage For="() => guiAction.Id"/>
                </td>

                <td>
                    <InputText @bind-Value="@guiAction.Action"/>
                    <ValidationMessage For="() => guiAction.Action"/>
                </td>

                <td>
                    <InputUri @bind-Value="@guiAction.Url"/>
                    <ValidationMessage For="() => guiAction.Url"/>
                </td>

                <td>
                    <InputText @bind-Value="@guiAction.AuthorizationAttribute"/>
                    <ValidationMessage For="() => guiAction.AuthorizationAttribute"/>
                </td>

                <td>
                    <InputCheckbox @bind-Value="@guiAction.IsDeleteDialogAction"/>
                    <ValidationMessage For="() => guiAction.IsDeleteDialogAction"/>
                </td>

                <td>
                    <InputSelect @bind-Value="@guiAction.HttpMethod">
                        @foreach (var type in Enum.GetValues<Http_HttpVerb>())
                        {
                            <option value="@type">@type</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => guiAction.HttpMethod)"/>
                </td>

                <td>
                    <InputSelect @bind-Value="@guiAction.Priority">
                        @foreach (var type in Enum.GetValues<DialogsEntitiesActions_DialogGuiActionPriority>())
                        {
                            <option value="@type">@type</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => guiAction.Priority)"/>
                </td>

                <td>
                    <InputLocalization @bind-Value="@guiAction.Title"/>
                    <ValidationMessage For="() => guiAction.Title"/>
                </td>

                <td>
                    <InputLocalization @bind-Value="@guiAction.Prompt"/>
                    <ValidationMessage For="() => guiAction.Prompt"/>
                </td>
            </tr>
        }
        </tbody>
    </table>
</fieldset>

@code {
    protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out ICollection<V1ServiceOwnerDialogsCommandsCreate_GuiAction> result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}