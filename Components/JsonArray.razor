@rendermode InteractiveServer
<div style="padding: 10px; border: 1px solid; background-color: forestgreen">
    <h4>@Fields.PropertyName (Array)</h4>
    <p>@Fields.Description</p>
    @{
        var temp = (List<Dictionary<string, object>>)Data[Fields.PropertyName];
        for (var i = 0; i < _amount; i++)
        {
            <FieldRecordComp Data="@temp[i]" FieldRecords="@Fields.ItemFormat"/>
        }
    }
    <button onclick="@Increment">Add</button>
    <button onclick="@Decrement">Remove</button>
</div>

@code {
    [Parameter]
    public required FieldRecord.ArrayRecord Fields { get; set; }

    [Parameter]
    public required Dictionary<string, object> Data { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Data.TryAdd(Fields.PropertyName, new List<Dictionary<string, object>>());
    }
    private int _amount = 0;
    private void Increment()
    {
        _amount++;

        var temp = (List<Dictionary<string, object>>)Data[Fields.PropertyName];
        temp.Add(new Dictionary<string, object>());
    }
    private void Decrement()
    {
        if (_amount <= 0) return;
        _amount--;
        var temp = (List<Dictionary<string, object>>)Data[Fields.PropertyName];
        temp.RemoveAt(_amount);
    }
}
